[
{
	"id": 1,
	"title": "Gulp 入门",
	"_content": "[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url] ## What is gulp? - **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow. - **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms. - **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations - **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use <!--more--> ## Documentation For a Getting started guide, API docs, recipes, making a plugin, etc. check out or docs! - Need something reliable? Check out the [documentation for the current release](/docs/README.md)! - Want to help us test the latest and greatest? Check out the [documentation for the next release](https://github.com/gulpjs/gulp/tree/4.0)! ## Sample `gulpfile.js` This file will give you a taste of what gulp does. ```js var gulp = require('gulp'); var coffee = require('gulp-coffee'); var concat = require('gulp-concat'); var uglify = require('gulp-uglify'); var imagemin = require('gulp-imagemin'); var sourcemaps = require('gulp-sourcemaps'); var del = require('del'); var paths = { scripts: ['client/js/**/*.coffee', '!client/external/**/*.coffee'], images: 'client/img/**/*' }; // Not all tasks need to use streams // A gulpfile is just another node program and you can use any package available on npm gulp.task('clean', function() { // You can use multiple globbing patterns as you would with `gulp.src` return del(['build']); }); gulp.task('scripts', ['clean'], function() { // Minify and copy all JavaScript (except vendor scripts) // with sourcemaps all the way down return gulp.src(paths.scripts) .pipe(sourcemaps.init()) .pipe(coffee()) .pipe(uglify()) .pipe(concat('all.min.js')) .pipe(sourcemaps.write()) .pipe(gulp.dest('build/js')); }); // Copy all static images gulp.task('images', ['clean'], function() { return gulp.src(paths.images) // Pass in options to the task .pipe(imagemin({optimizationLevel: 5})) .pipe(gulp.dest('build/img')); }); // Rerun the task when a file changes gulp.task('watch', function() { gulp.watch(paths.scripts, ['scripts']); gulp.watch(paths.images, ['images']); }); // The default task (called when you run `gulp` from cli) gulp.task('default', ['watch', 'scripts', 'images']); ``` ## Incremental Builds We recommend these plugins: - [gulp-changed](https://github.com/sindresorhus/gulp-changed) - only pass through changed files - [gulp-cached](https://github.com/contra/gulp-cached) - in-memory file cache, not for operation on sets of files - [gulp-remember](https://github.com/ahaurw01/gulp-remember) - pairs nicely with gulp-cached - [gulp-newer](https://github.com/tschaub/gulp-newer) - pass through newer source files only, supports many:1 source:dest ## Want to contribute? Anyone can help make this project better - check out our [Contributing guide](/CONTRIBUTING.md)! [downloads-image]: https://img.shields.io/npm/dm/gulp.svg [npm-url]: https://www.npmjs.com/package/gulp [npm-image]: https://img.shields.io/npm/v/gulp.svg [travis-url]: https://travis-ci.org/gulpjs/gulp [travis-image]: https://img.shields.io/travis/gulpjs/gulp.svg [coveralls-url]: https://coveralls.io/r/gulpjs/gulp [coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg [gitter-url]: https://gitter.im/gulpjs/gulp [gitter-image]: https://badges.gitter.im/gulpjs/gulp.png",
	"raw": "--- Gulp --- [![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url] ## What is gulp? - **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow. - **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms. - **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations - **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use <!--more--> ## Documentation For a Getting started guide, API docs, recipes, making a plugin, etc. check out or docs! - Need something reliable? Check out the [documentation for the current release](/docs/README.md)! - Want to help us test the latest and greatest? Check out the [documentation for the next release](https://github.com/gulpjs/gulp/tree/4.0)! ## Sample `gulpfile.js` This file will give you a taste of what gulp does. ```js var gulp = require('gulp'); var coffee = require('gulp-coffee'); var concat = require('gulp-concat'); var uglify = require('gulp-uglify'); var imagemin = require('gulp-imagemin'); var sourcemaps = require('gulp-sourcemaps'); var del = require('del'); var paths = { scripts: ['client/js/**/*.coffee', '!client/external/**/*.coffee'], images: 'client/img/**/*' }; // Not all tasks need to use streams // A gulpfile is just another node program and you can use any package available on npm gulp.task('clean', function() { // You can use multiple globbing patterns as you would with `gulp.src` return del(['build']); }); gulp.task('scripts', ['clean'], function() { // Minify and copy all JavaScript (except vendor scripts) // with sourcemaps all the way down return gulp.src(paths.scripts) .pipe(sourcemaps.init()) .pipe(coffee()) .pipe(uglify()) .pipe(concat('all.min.js')) .pipe(sourcemaps.write()) .pipe(gulp.dest('build/js')); }); // Copy all static images gulp.task('images', ['clean'], function() { return gulp.src(paths.images) // Pass in options to the task .pipe(imagemin({optimizationLevel: 5})) .pipe(gulp.dest('build/img')); }); // Rerun the task when a file changes gulp.task('watch', function() { gulp.watch(paths.scripts, ['scripts']); gulp.watch(paths.images, ['images']); }); // The default task (called when you run `gulp` from cli) gulp.task('default', ['watch', 'scripts', 'images']); ``` ## Incremental Builds We recommend these plugins: - [gulp-changed](https://github.com/sindresorhus/gulp-changed) - only pass through changed files - [gulp-cached](https://github.com/contra/gulp-cached) - in-memory file cache, not for operation on sets of files - [gulp-remember](https://github.com/ahaurw01/gulp-remember) - pairs nicely with gulp-cached - [gulp-newer](https://github.com/tschaub/gulp-newer) - pass through newer source files only, supports many:1 source:dest ## Want to contribute? Anyone can help make this project better - check out our [Contributing guide](/CONTRIBUTING.md)! [downloads-image]: https://img.shields.io/npm/dm/gulp.svg [npm-url]: https://www.npmjs.com/package/gulp [npm-image]: https://img.shields.io/npm/v/gulp.svg [travis-url]: https://travis-ci.org/gulpjs/gulp [travis-image]: https://img.shields.io/travis/gulpjs/gulp.svg [coveralls-url]: https://coveralls.io/r/gulpjs/gulp [coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg [gitter-url]: https://gitter.im/gulpjs/gulp [gitter-image]: https://badges.gitter.im/gulpjs/gulp.png",
	"content": "<p><a href=\"https://www.npmjs.com/package/gulp\"><img src=\"https://img.shields.io/npm/v/gulp.svg\" alt=\"NPM version\"></a> <a href=\"https://www.npmjs.com/package/gulp\"><img src=\"https://img.shields.io/npm/dm/gulp.svg\" alt=\"Downloads\"></a> <a href=\"https://travis-ci.org/gulpjs/gulp\"><img src=\"https://img.shields.io/travis/gulpjs/gulp.svg\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/gulpjs/gulp\"><img src=\"https://img.shields.io/coveralls/gulpjs/gulp/master.svg\" alt=\"Coveralls Status\"></a> <a href=\"https://gitter.im/gulpjs/gulp\"><img src=\"https://badges.gitter.im/gulpjs/gulp.png\" alt=\"Gitter chat\"></a></p> <h2 id=\"What-is-gulp\"><a href=\"#What-is-gulp\" class=\"headerlink\" title=\"What is gulp?\"></a>What is gulp?</h2><ul> <li><strong>Automation</strong> - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.</li> <li><strong>Platform-agnostic</strong> - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.</li> <li><strong>Strong Ecosystem</strong> - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations</li> <li><strong>Simple</strong> - By providing only a minimal API surface, gulp is easy to learn and simple to use</li> </ul> <h2 id=\"Documentation\"><a href=\"#Documentation\" class=\"headerlink\" title=\"Documentation\"></a>Documentation</h2><p>For a Getting started guide, API docs, recipes, making a plugin, etc. check out or docs!</p> <ul> <li>Need something reliable? Check out the <a href=\"/docs/README.md\">documentation for the current release</a>!</li> <li>Want to help us test the latest and greatest? Check out the <a href=\"https://github.com/gulpjs/gulp/tree/4.0\">documentation for the next release</a>!</li> </ul> <h2 id=\"Sample-gulpfile-js\"><a href=\"#Sample-gulpfile-js\" class=\"headerlink\" title=\"Sample gulpfile.js\"></a>Sample <code>gulpfile.js</code></h2><p>This file will give you a taste of what gulp does.</p> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> coffee = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-coffee'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> concat = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-concat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> sourcemaps = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-sourcemaps'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> del = <span class=\"built_in\">require</span>(<span class=\"string\">'del'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> paths = {</div><div class=\"line\"> scripts: [<span class=\"string\">'client/js/**/*.coffee'</span>, <span class=\"string\">'!client/external/**/*.coffee'</span>],</div><div class=\"line\"> images: <span class=\"string\">'client/img/**/*'</span></div><div class=\"line\">};</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Not all tasks need to use streams</span></div><div class=\"line\"><span class=\"comment\">// A gulpfile is just another node program and you can use any package available on npm</span></div><div class=\"line\">gulp.task(<span class=\"string\">'clean'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\"> <span class=\"comment\">// You can use multiple globbing patterns as you would with `gulp.src`</span></div><div class=\"line\"> <span class=\"keyword\">return</span> del([<span class=\"string\">'build'</span>]);</div><div class=\"line\">});</div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">'scripts'</span>, [<span class=\"string\">'clean'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\"> <span class=\"comment\">// Minify and copy all JavaScript (except vendor scripts)</span></div><div class=\"line\"> <span class=\"comment\">// with sourcemaps all the way down</span></div><div class=\"line\"> <span class=\"keyword\">return</span> gulp.src(paths.scripts)</div><div class=\"line\"> .pipe(sourcemaps.init())</div><div class=\"line\"> .pipe(coffee())</div><div class=\"line\"> .pipe(uglify())</div><div class=\"line\"> .pipe(concat(<span class=\"string\">'all.min.js'</span>))</div><div class=\"line\"> .pipe(sourcemaps.write())</div><div class=\"line\"> .pipe(gulp.dest(<span class=\"string\">'build/js'</span>));</div><div class=\"line\">});</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Copy all static images</span></div><div class=\"line\">gulp.task(<span class=\"string\">'images'</span>, [<span class=\"string\">'clean'</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\"> <span class=\"keyword\">return</span> gulp.src(paths.images)</div><div class=\"line\"> <span class=\"comment\">// Pass in options to the task</span></div><div class=\"line\"> .pipe(imagemin({optimizationLevel: <span class=\"number\">5</span>}))</div><div class=\"line\"> .pipe(gulp.dest(<span class=\"string\">'build/img'</span>));</div><div class=\"line\">});</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Rerun the task when a file changes</span></div><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{</div><div class=\"line\"> gulp.watch(paths.scripts, [<span class=\"string\">'scripts'</span>]);</div><div class=\"line\"> gulp.watch(paths.images, [<span class=\"string\">'images'</span>]);</div><div class=\"line\">});</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// The default task (called when you run `gulp` from cli)</span></div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'watch'</span>, <span class=\"string\">'scripts'</span>, <span class=\"string\">'images'</span>]);</div></pre></td></tr></table></figure><h2 id=\"Incremental-Builds\"><a href=\"#Incremental-Builds\" class=\"headerlink\" title=\"Incremental Builds\"></a>Incremental Builds</h2><p>We recommend these plugins:</p> <ul> <li><a href=\"https://github.com/sindresorhus/gulp-changed\">gulp-changed</a> - only pass through changed files</li> <li><a href=\"https://github.com/contra/gulp-cached\">gulp-cached</a> - in-memory file cache, not for operation on sets of files</li> <li><a href=\"https://github.com/ahaurw01/gulp-remember\">gulp-remember</a> - pairs nicely with gulp-cached</li> <li><a href=\"https://github.com/tschaub/gulp-newer\">gulp-newer</a> - pass through newer source files only, supports many:1 source:dest</li> </ul> <h2 id=\"Want-to-contribute\"><a href=\"#Want-to-contribute\" class=\"headerlink\" title=\"Want to contribute?\"></a>Want to contribute?</h2><p>Anyone can help make this project better - check out our <a href=\"/CONTRIBUTING.md\">Contributing guide</a>!</p>",
	"excerpt": "<p><a href=\"https://www.npmjs.com/package/gulp\"><img src=\"https://img.shields.io/npm/v/gulp.svg\" alt=\"NPM version\"></a> <a href=\"https://www.npmjs.com/package/gulp\"><img src=\"https://img.shields.io/npm/dm/gulp.svg\" alt=\"Downloads\"></a> <a href=\"https://travis-ci.org/gulpjs/gulp\"><img src=\"https://img.shields.io/travis/gulpjs/gulp.svg\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/r/gulpjs/gulp\"><img src=\"https://img.shields.io/coveralls/gulpjs/gulp/master.svg\" alt=\"Coveralls Status\"></a> <a href=\"https://gitter.im/gulpjs/gulp\"><img src=\"https://badges.gitter.im/gulpjs/gulp.png\" alt=\"Gitter chat\"></a></p> <h2 id=\"What-is-gulp\"><a href=\"#What-is-gulp\" class=\"headerlink\" title=\"What is gulp?\"></a>What is gulp?</h2><ul> <li><strong>Automation</strong> - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.</li> <li><strong>Platform-agnostic</strong> - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.</li> <li><strong>Strong Ecosystem</strong> - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations</li> <li><strong>Simple</strong> - By providing only a minimal API surface, gulp is easy to learn and simple to use</li> </ul>",
	"createTime": "2016-07-16T06:15:05.262Z",
	"updateTime": "2016-07-20T04:05:54.262Z",
	"published": true,
	"category": "随笔",
	"times": 153
},
{
	"id": 2,
	"title": "Hello World",
	"_content": "Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues). ## Quick Start ### Create a new post ``` bash $ hexo new \"My New Post\" ``` More info: [Writing](https://hexo.io/docs/writing.html) ### Run server ``` bash $ hexo server ``` More info: [Server](https://hexo.io/docs/server.html) ### Generate static files ``` bash $ hexo generate ``` More info: [Generating](https://hexo.io/docs/generating.html) ### Deploy to remote sites ``` bash $ hexo deploy ``` More info: [Deployment](https://hexo.io/docs/deployment.html)",
	"raw": "--- Hello World --- Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues). ## Quick Start ### Create a new post ``` bash $ hexo new \"My New Post\" ``` More info: [Writing](https://hexo.io/docs/writing.html) ### Run server ``` bash $ hexo server ``` More info: [Server](https://hexo.io/docs/server.html) ### Generate static files ``` bash $ hexo generate ``` More info: [Generating](https://hexo.io/docs/generating.html) ### Deploy to remote sites ``` bash $ hexo deploy ``` More info: [Deployment](https://hexo.io/docs/deployment.html)",
	"content": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p> <h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p> <h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p> <h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p> <h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p> ",
	"excerpt": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p> <h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p> <h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p> <h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p> <h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>",
	"createTime": "2016-07-06T06:15:49.262Z",
	"updateTime": "2016-07-06T06:15:49.262Z",
	"published": true,
	"category": "随笔",
	"times": 84
}
]